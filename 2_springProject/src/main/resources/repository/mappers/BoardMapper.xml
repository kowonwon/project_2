<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	맵퍼의 namespace 속성은 맵핑 구문을 그룹핑 하는 역할을 한다.
	여러 맵퍼에서 맵핑 구문의 id 속성의 값이 중복되더라도 namespace와
	맵핑 구문의 id 속성에 지정한 값을 합쳐서 호출하기 때문에 맵핑 구문이
	중복되지 않게 분류하여 관리할 수 있다.
	테이블 이름을 바탕으로 namespace를 지정하고 맵핑 구문의 id 속성의
	값은 SQL 문의 맥락에 따라서 명명하는 것이 일반적 이다.
	
	parameterType 속성에는 주로 SQL 문의 조건에 사용할 파라미터의
	데이터 타입을 지정하는 속성으로 자바 원시 타입(기본 타입, String)과 자바빈,
	Map과 같은 타입을 지정할 수 있다. resultType 속성도 parameterType
	속성에서 지정한 타입을 많이 사용한다. parameterType과 resultType에
	지정할 데이터 타입이 자바 원시 타입이면 생략가능하다.
	
	마이바티스 참고 사이트
	  - http://blog.mybatis.org/
	  - http://www.mybatis.org/mybatis-3/ko/index.html
-->

<mapper namespace="com.springstudy.project.mapper.BoardMapper" >
	<!-- 개인페이지 리스트 삭제 -->
	<delete id="deleteList">
		DELETE FROM budget
		WHERE no =#{no}
	</delete>
	
	<!--개인 페이지 리스트 수정 -->
	<update id="updateBudget" parameterType="Budget">
        UPDATE budget
        SET writer = #{writer}, category = #{category}, content = #{content}, 
            price = #{price}, payment = #{payment}, date = #{date}
        WHERE no = #{no}
    </update>
	
	<!--개인페이지 폼 입력 -->
	<insert id="insertList" parameterType="Budget"
		useGeneratedKeys="true" keyProperty="no">
		INSERT	into budget (writer, category, content, price, payment, date)
		VALUES (#{writer}, #{category}, #{content}, #{price}, #{payment}, #{date})
	</insert>


	<delete id="deleteReply">
		DELETE FROM reply WHERE no = #{no}
	</delete>

	<update id="updateReply" parameterType="Reply">
		UPDATE reply
		SET reply_content = #{replyContent},
		reg_date = SYSDATE()
		WHERE no = #{no}
	</update>

	<!-- 개인 페이지용 게시판 리스트 출력 -->
	<select id="myBoardList" resultType="Budget">
		SELECT *
		FROM budget
		WHERE writer = #{writer}
		ORDER by date DESC
	</select>

	<insert id="addReply" parameterType="Reply">
		INSERT INTO reply(bbs_no, reply_content, reply_writer, reg_date)
		VALUES(#{bbsNo}, #{replyContent}, #{replyWriter}, SYSDATE())
	</insert>

	<select id="replyList" resultType="Reply">
		SELECT
			no,
			bbs_no AS bbsNo,
			reply_content AS replyContent,
			reply_writer AS replyWriter,
			reg_date AS regDate
		FROM reply WHERE bbs_no = #{no} ORDER BY reg_date DESC
	</select>
	
	<!-- 년도와 월 기준으로 필터링  -->
	<select id="getBudgetByMonth" parameterType="map" resultType="Budget">
        SELECT *
        FROM budget
        WHERE EXTRACT(YEAR FROM date) = #{year}
          AND EXTRACT(MONTH FROM date) = #{month}
    </select>
	
	<delete id="deleteBoard">
		DELETE FROM budget WHERE no = #{no}
	</delete>
	
	<delete id="beforeDeleteBoard">
		DELETE FROM reply WHERE bbs_no = #{no}
	</delete>

	<update id="updateBoard" parameterType="Budget">
		UPDATE budget set category=#{category}, content=#{content}, price=#{price}, evaluation=#{evaluation}
		WHERE no = #{no}
	</update>

	<insert id="insertBoard" parameterType="Budget" useGeneratedKeys="true" keyProperty="no">
		INSERT INTO budget (writer, category, content, price, date, evaluation, good, bad)
		VALUES (#{writer}, #{category}, #{content}, #{price}, SYSDATE(), #{evaluation}, 0, 0)
	</insert>
	
	<select id="getBoard" resultType="Budget">
		SELECT * FROM budget WHERE no = #{no}
	</select>
	
	<select id="boardList" resultType="Budget">
		SELECT * FROM budget ORDER BY date
	</select>

</mapper>	
